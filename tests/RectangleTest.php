<?php

require_once '../app/Rectangle.php';

/**
 * Test class for Router.
 * Generated by PHPUnit on 2011-12-16 at 03:45:59.
 */
class RectangleTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Router
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Rectangle;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @expectedException RectangleException
     * @expectedExceptionMessage Invalid param
     * @dataProvider providerException
     * @param $aWidth
     */
    public function testSetWidthException($aWidth)
    {
        $this->object->setWidth($aWidth);
    }

    /**
     * @expectedException RectangleException
     * @expectedExceptionMessage Invalid param
     * @dataProvider providerException
     * @param $aHeight
     */
    public function testSetHeightException($aHeight)
    {
        $this->object->setHeight($aHeight);
    }

    /**
     * @return array
     */
    public function providerException()
    {
        return array(
            array(0),
            array(-1),
        );
    }

    /**
     *
     */
    public function testCalcSquare()
    {
        $width = 4;
        $this->object->setWidth($width);
        $this->assertEquals($width, $this->object->getWidth());

        $height = 2;
        $this->object->setHeight($height);
        $this->assertEquals($height, $this->object->getHeight());

        $this->assertEquals($width * $height, $this->object->getCalcSquare());
    }

    /**
     *
     */
    public function testCalcPerimeter()
    {
        $width = 4;
        $this->object->setWidth($width);
        $this->assertEquals($width, $this->object->getWidth());

        $height = 2;
        $this->object->setHeight($height);
        $this->assertEquals($height, $this->object->getHeight());

        $this->assertEquals(($width + $height) * 2, $this->object->getCalcPerimeter());
    }
}
?>
